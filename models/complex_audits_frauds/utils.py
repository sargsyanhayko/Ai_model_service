import warnings

import numpy as np
import pandas as pd

target_cols = [
    "AUDIT_ANY",
    "AUDIT_VAT_RELATED",
    "FRAUD_ANY",
    "FRAUD_VAT",
    "CORRECT_VAT",
    "CORRECT_PROFIT",
    "FRAUD_OR_CORRECT",
]

cols_to_drop = [
    "TIN",
    "DLN",
    "STATUS",
    "level1",
    "SOURCE",
    "TAX_YEAR",
    "LAST_DECL",
    "7a_PERCENT_CHANGE",
    "DUE_PAYMENT_SUM",
    "A100_perc_change",
    "23a_perc_change",
    "A100_delta_change",
    "23a_delta_change",
]

vat_features = [
    "var1",
    "var1_std",
    "var2",
    "var2_std",
    "var3",
    "var3_std",
    "var4",
    "var4_std",
    "var5",
    "var5_std",
    "var6",
    "var6_std",
    "var7",
    "var7_std",
    "var8",
    "var8_std",
    "var9",
    "var9_std",
    "v7a",
    "v7b",
    "v8a1",
    "v8a2",
    "v8b1",
    "v8b2",
    "v9a",
    "v9b",
    "v10",
    "v111",
    "v112",
    "v12",
    "v13",
    "v14",
    "v15a",
    "v15b",
    "v16a",
    "v16b",
    "v17a",
    "v17b",
    "v18a",
    "v18b",
    "v19a1",
    "v19b1",
    "v19a2",
    "v19b2",
    "v20a",
    "v20b",
    "v21a",
    "v21b",
    "v22a",
    "v22b",
    "v23a",
    "v23b",
    "v24",
    "v25",
    "v26",
    "v27",
    "v281",
    "v282",
    "v29",
    "v30",
    "v31",
    "v32a",
    "v32b",
    "v33a",
    "v33b",
    "v34a",
    "v34b",
    "v7a_mean",
    "v7b_mean",
    "v8a1_mean",
    "v8a2_mean",
    "v8b1_mean",
    "v8b2_mean",
    "v9a_mean",
    "v9b_mean",
    "v10_mean",
    "v111_mean",
    "v112_mean",
    "v12_mean",
    "v13_mean",
    "v14_mean",
    "v15a_mean",
    "v15b_mean",
    "v16a_mean",
    "v16b_mean",
    "v17a_mean",
    "v17b_mean",
    "v18a_mean",
    "v18b_mean",
    "v19a1_mean",
    "v19b1_mean",
    "v19a2_mean",
    "v19b2_mean",
    "v20a_mean",
    "v20b_mean",
    "v21a_mean",
    "v21b_mean",
    "v22a_mean",
    "v22b_mean",
    "v23a_mean",
    "v23b_mean",
    "v24_mean",
    "v25_mean",
    "v26_mean",
    "v27_mean",
    "v281_mean",
    "v282_mean",
    "v29_mean",
    "v30_mean",
    "v31_mean",
    "v32a_mean",
    "v32b_mean",
    "v33a_mean",
    "v33b_mean",
    "v34a_mean",
    "v34b_mean",
    "n_MONTH_filed",
    "TOTAL",
    "TOTAL_CHANGE",
    "7a_CHANGE",
    "7a_PERCENT_CHANGE",
    "var1_CHANGE",
    "var2_CHANGE",
    "var3_CHANGE",
    "var4_CHANGE",
    "var5_CHANGE",
    "var6_CHANGE",
    "var7_CHANGE",
    "var8_CHANGE",
    "var9_CHANGE",
]

invoice_supplier_columns = [
    "supplier_COUNT_mean",
    "supplier_COUNT_std",
    "supplier_TOTAL_PRICE_SUM_mean",
    "supplier_TOTAL_PRICE_SUM_std",
    "supplier_TOTAL_VAT_SUM_mean",
    "supplier_TOTAL_VAT_SUM_std",
    "supplier_TOTAL_VAT_MAX_max",
    "supplier_TOTAL_VAT_MAX_std",
    "supplier_TOTAL_VAT_MIN_min",
    "supplier_TOTAL_VAT_MIN_std",
]

invoice_buyer_columns = [
    "buyer_COUNT_mean",
    "buyer_COUNT_std",
    "buyer_TOTAL_PRICE_SUM_mean",
    "buyer_TOTAL_PRICE_SUM_std",
    "buyer_TOTAL_VAT_SUM_mean",
    "buyer_TOTAL_VAT_SUM_std",
    "buyer_TOTAL_VAT_MAX_max",
    "buyer_TOTAL_VAT_MAX_std",
    "buyer_TOTAL_VAT_MIN_min",
    "buyer_TOTAL_VAT_MIN_std",
]


def read_excel(file_path):
    with warnings.catch_warnings():
        warnings.simplefilter("ignore")
        df = pd.read_excel(file_path, engine="openpyxl")
    return df


def time_encoding(df):
    df["QUARTER"] = df["QUARTER"].str.extract("(\d+)", expand=False).astype(int)
    df["TIME_INFO"] = df["TAX_YEAR"] + ((df["QUARTER"] - 1) / 4)
    time_max = df["TIME_INFO"].max() + 0.25
    df["TIME_SIN"] = np.sin(2 * np.pi * df["TIME_INFO"] / time_max)
    df["TIME_COS"] = np.cos(2 * np.pi * df["TIME_INFO"] / time_max)
    df = df.drop(columns=["TIME_INFO", "TAX_YEAR", "QUARTER"])
    return df
